title = "User Dashboard"
url = "/dashboard/create-order"
layout = "default"
[account]
redirect=0
[session]
[Dashboard]
[Csv]
==
<?php
use Intervention\Image\ImageManagerStatic as Image;
function onAddPin(){
  $addpin = new Codersocean\Honorpins\Models\Pin;
  $addpin->title = post('title');
  $addpin->template = post('template');
  $addpin->org_id = $this->param('id');
  $png_url = "pin-".time().".png";
    $path = public_path().'/storage/app/uploads/web/' . $png_url;
    $datapath = '/storage/app/uploads/web/' . $png_url;

    Image::make(file_get_contents(Input::post('logo')))->resize(300, 200)->save($path);

  $addpin->image = $datapath;
  $addpin->certificate_id = 0;
  $addpin->save();

  $this['addpin'] = 1;


    $this['organization'] = $addpin->organization;
return [
  '#completepin' => $this->renderPartial('profile/addpin')
];
}

function onSelectOrganization(){
  $addorganization = $this['organization'] = Codersocean\Honorpins\Models\Organization::where('id',post('id'))->first();
  $this['selectedorganizations'] = $addorganization->certificates;
  $this['notselect'] = 0;


  return [
    '#selectcertificatenow' => $this->renderPartial('site/selectcertificate')
  ];
}

function onCheckoutwithourSavedCards(){
  $this['user'] = $user = Auth::getuser();

  $certificates = Codersocean\Honorpins\Models\Cart::where('user_id',$user->id)->groupBy('certificate_id')->get();
  $items = Codersocean\Honorpins\Models\Cart::where('user_id',$user->id)->count();
$card = Codersocean\Honorpins\Models\PaymentMethod::where('cus_id',post('cus'))->first();
$log = new Codersocean\Honorpins\Models\PaymentLogs;
$log->user_id = $user->id;
$log->amount = post('amountpaid');
$log->items = $items;
$log->payment_method = $card->type;
$log->transaction_id = post('transaction_id');
$log->receipt_url = post('receipt_url');
$log->charge_id = post('charge_id');
$log->refund_url = post('refund_url');
$log->save();
  foreach($certificates as $certificate){
        $order = new Codersocean\Honorpins\Models\Order;
        $order->certificate_id = $certificate->certificate_id;
        $card = Codersocean\Honorpins\Models\PaymentMethod::where('cus_id',post('cus'))->first();
        $thiscertificate = Codersocean\Honorpins\Models\Certificate::where('id',$certificate->certificate_id)->first();
        $order->pin_id = $thiscertificate->pin_id;
        $order->org_id = $thiscertificate->org_id;
        $order->order_status = 0;
        $order->payment_status = 1;
        $order->amount_paid =post('amountpaid');
        $order->payment_method =$card->type;
        $order->user_id =$user->id;
        $order->pin_status = 1;
        $order->save();
        $cartitems = Codersocean\Honorpins\Models\Cart::where('user_id',$user->id)->where('certificate_id',$certificate->certificate_id)->get();
        foreach($cartitems as $item){
          $orderdetail = new Codersocean\Honorpins\Models\OrderDetail;
          $orderdetail->order_id = $order->id;
          $orderdetail->user_id = $user->id;
          $orderdetail->email = $item->email;
          $orderdetail->start_date = $item->start_date;
          $orderdetail->end_date = $item->end_date;
          $orderdetail->reg_number = $item->reg_number;
          $orderdetail->name = $item->name;
          $orderdetail->phone = $item->phone;
          $orderdetail->save();
          $createholder = new Codersocean\Honorpins\Models\HolderPins;
          $createholder->org_id = $order->org_id;
          $createholder->certificate_id = $order->certificate_id;
          $createholder->pin_id = $order->pin_id;
          $createholder->pin_Status = 1;
          $createholder->email = $item->email;
          $createholder->start_date = $item->start_date;
          $createholder->end_date = $item->end_date;
          $createholder->reg_number = $item->reg_number;
          $createholder->full_name = $item->name;
          $createholder->phone = $item->phone;
          $createholder->availbility = 0;
          $Caracteres = '0123456789';
              $QuantidadeCaracteres = strlen($Caracteres);
              $QuantidadeCaracteres--;
              $Hash=NULL;
                  for($x=1;$x<=7;$x++){
                      $Posicao = rand(0,$QuantidadeCaracteres);
                      $Hash .= substr($Caracteres,$Posicao,1);
                  }

          $createholder->public_access_code = $Hash;
          $Caracteres = '0123456789';
              $QuantidadeCaracteres = strlen($Caracteres);
              $QuantidadeCaracteres--;
              $Hash=NULL;
                  for($x=1;$x<=7;$x++){
                      $Posicao = rand(0,$QuantidadeCaracteres);
                      $Hash .= substr($Caracteres,$Posicao,1);
                  }

          $createholder->private_access_code = $Hash;
          $createholder->save();
          $datamail = [
                      'name' => $item->name,
                      'certificate' => $order->certificate->title,
                      'organization' => $order->organization->org_name,

                  ];
          Mail::send('certificate.pin.order', $datamail, function($message) use ($createholder) {
                      $message->to($createholder->email, $createholder->email);
                       $message->from('noreply@honorpins.com','Your Certification Pin is Created By Issuer!');
                  });
        }
  }
  $delete = Codersocean\Honorpins\Models\Cart::where('user_id',$user->id)->delete();

  $cartitems= Codersocean\Honorpins\Models\Cart::where('user_id',$user->id)->get();
$this['cartitems']  =   $cartitems;
$this['unitprice'] = 5;
$this['tax'] = 2;
return [
'#orderdata' => $this->renderPartial('profile/orderdata'),
'#ordermade' => $this->renderPartial('profile/ordermade'),
'#orderbilldata' => $this->renderPartial('profile/orderbilldata')
];
}
function onCreateOrder(){
    $this['user'] = $user = Auth::getuser();
    $certificates = Codersocean\Honorpins\Models\Cart::where('user_id',$user->id)->groupBy('certificate_id')->get();
    foreach($certificates as $certificate){
          $order = new Codersocean\Honorpins\Models\Order;
          $order->certificate_id = $certificate->certificate_id;
          $thiscertificate = Codersocean\Honorpins\Models\Certificate::where('id',$certificate->certificate_id)->first();
          $order->pin_id = $thiscertificate->pin_id;
          $order->org_id = $thiscertificate->org_id;
          $order->order_status = 0;
          $order->payment_status = 1;
          $order->amount_paid =0;
          $order->payment_method ='none';
          $order->user_id =$user->id;
          $order->pin_status = 0;
          $order->save();
          $cartitems = Codersocean\Honorpins\Models\Cart::where('user_id',$user->id)->where('certificate_id',$certificate->certificate_id)->get();
          foreach($cartitems as $item){
            $orderdetail = new Codersocean\Honorpins\Models\OrderDetail;
            $orderdetail->order_id = $order->id;
            $orderdetail->user_id = $user->id;
            $orderdetail->email = $item->email;
            $orderdetail->start_date = $item->start_date;
            $orderdetail->end_date = $item->end_date;
            $orderdetail->reg_number = $item->reg_number;
            $orderdetail->phone = $item->phone;
            $orderdetail->name = $item->name;
            $orderdetail->save();
            $createholder = new Codersocean\Honorpins\Models\HolderPins;
            $createholder->org_id = $order->org_id;
            $createholder->certificate_id = $order->certificate_id;
            $createholder->pin_id = $order->pin_id;
            $createholder->pin_Status = 0;
            $createholder->email = $item->email;
            $createholder->start_date = $item->start_date;
            $createholder->end_date = $item->end_date;
            $createholder->reg_number = $item->reg_number;
            $createholder->full_name = $item->name;
            $createholder->phone = $item->phone;
            $createholder->availbility = 0;
            $Caracteres = '0123456789';
                $QuantidadeCaracteres = strlen($Caracteres);
                $QuantidadeCaracteres--;
                $Hash=NULL;
                    for($x=1;$x<=7;$x++){
                        $Posicao = rand(0,$QuantidadeCaracteres);
                        $Hash .= substr($Caracteres,$Posicao,1);
                    }

            $createholder->public_access_code = $Hash;
            $Caracteres = '0123456789';
                $QuantidadeCaracteres = strlen($Caracteres);
                $QuantidadeCaracteres--;
                $Hash=NULL;
                    for($x=1;$x<=7;$x++){
                        $Posicao = rand(0,$QuantidadeCaracteres);
                        $Hash .= substr($Caracteres,$Posicao,1);
                    }

            $createholder->private_access_code = $Hash;
            $createholder->save();
            $datamail = [
                        'name' => $item->name,
                        'certificate' => $order->certificate->title,
                        'organization' => $order->organization->org_name,

                    ];
            Mail::send('certificate.pin.order', $datamail, function($message) use ($createholder) {
                        $message->to($createholder->email, $createholder->email);
                         $message->from('noreply@honorpins.com','Your Certification Pin is Created By Issuer!');
                    });
          }
    }
    $delete = Codersocean\Honorpins\Models\Cart::where('user_id',$user->id)->delete();

    $cartitems= Codersocean\Honorpins\Models\Cart::where('user_id',$user->id)->get();
  $this['cartitems']  =   $cartitems;
  $this['unitprice'] = 5;
  $this['tax'] = 2;
  return [
  '#orderdata' => $this->renderPartial('profile/orderdata'),
  '#ordermade' => $this->renderPartial('profile/ordermade'),
  '#orderbilldata' => $this->renderPartial('profile/orderbilldata')
  ];

}
function onCheckoutWithPins(){
  if(post('is_saving') == 1){
    $user = $this['user']= Auth::getuser();
    $add = new Codersocean\Honorpins\Models\PaymentMethod;
    $add->cus_id = post('cus_id');
    $add->name = post('name');
    $add->type = post('type');
    $add->brand = post('brand');
    $add->last_digit = post('last_digit');
    $add->ex_date = post('exp');
    $add->user_id = $user->id;
    $add->save();
  }
  $this['user'] = $user = Auth::getuser();

  $certificates = Codersocean\Honorpins\Models\Cart::where('user_id',$user->id)->groupBy('certificate_id')->get();
  $items = Codersocean\Honorpins\Models\Cart::where('user_id',$user->id)->count();
$card = Codersocean\Honorpins\Models\PaymentMethod::where('cus_id',post('cus'))->first();
$log = new Codersocean\Honorpins\Models\PaymentLogs;
$log->user_id = $user->id;
$log->amount = post('amountpaid');
$log->items = $items;
$log->payment_method = $card->type;
$log->transaction_id = post('transaction_id');
$log->receipt_url = post('receipt_url');
$log->charge_id = post('charge_id');
$log->refund_url = post('refund_url');
$log->save();
  foreach($certificates as $certificate){
        $order = new Codersocean\Honorpins\Models\Order;
        $order->certificate_id = $certificate->certificate_id;
        $thiscertificate = Codersocean\Honorpins\Models\Certificate::where('id',$certificate->certificate_id)->first();
        $order->pin_id = $thiscertificate->pin_id;
        $order->org_id = $thiscertificate->org_id;
        $order->order_status = 1;
        $order->payment_status = 1;
        $order->amount_paid =post('amountpaid');
        $order->payment_method =post('type');
        $order->user_id =$user->id;
        $order->pin_status = 1;
        $order->save();
        $cartitems = Codersocean\Honorpins\Models\Cart::where('user_id',$user->id)->where('certificate_id',$certificate->certificate_id)->get();
        foreach($cartitems as $item){
          $orderdetail = new Codersocean\Honorpins\Models\OrderDetail;
          $orderdetail->order_id = $order->id;
          $orderdetail->user_id = $user->id;
          $orderdetail->email = $item->email;
          $orderdetail->start_date = $item->start_date;
          $orderdetail->end_date = $item->end_date;
          $orderdetail->reg_number = $item->reg_number;
          $orderdetail->phone = $item->phone;
          $orderdetail->name = $item->name;
          $orderdetail->save();
          $createholder = new Codersocean\Honorpins\Models\HolderPins;
          $createholder->org_id = $order->org_id;
          $createholder->certificate_id = $order->certificate_id;
          $createholder->pin_id = $order->pin_id;
          $createholder->pin_Status = 1;
          $createholder->email = $item->email;
          $createholder->start_date = $item->start_date;
          $createholder->end_date = $item->end_date;
          $createholder->reg_number = $item->reg_number;
          $createholder->full_name = $item->name;
          $createholder->phone = $item->phone;
          $createholder->availbility = 0;
          $Caracteres = '0123456789';
              $QuantidadeCaracteres = strlen($Caracteres);
              $QuantidadeCaracteres--;
              $Hash=NULL;
                  for($x=1;$x<=7;$x++){
                      $Posicao = rand(0,$QuantidadeCaracteres);
                      $Hash .= substr($Caracteres,$Posicao,1);
                  }

          $createholder->public_access_code = $Hash;
          $Caracteres = '0123456789';
              $QuantidadeCaracteres = strlen($Caracteres);
              $QuantidadeCaracteres--;
              $Hash=NULL;
                  for($x=1;$x<=7;$x++){
                      $Posicao = rand(0,$QuantidadeCaracteres);
                      $Hash .= substr($Caracteres,$Posicao,1);
                  }

          $createholder->private_access_code = $Hash;
          $createholder->save();
          $datamail = [
                      'name' => $item->name,
                      'certificate' => $order->certificate->title,
                      'organization' => $order->organization->org_name,

                  ];
          Mail::send('certificate.pin.order', $datamail, function($message) use ($createholder) {
                      $message->to($createholder->email, $createholder->email);
                       $message->from('noreply@honorpins.com','Your Certification Pin is Created By Issuer!');
                  });
        }
  }
  $delete = Codersocean\Honorpins\Models\Cart::where('user_id',$user->id)->delete();

  $cartitems= Codersocean\Honorpins\Models\Cart::where('user_id',$user->id)->get();
$this['cartitems']  =   $cartitems;
$this['unitprice'] = 5;
$this['tax'] = 2;
return [
'#orderdata' => $this->renderPartial('profile/orderdata'),
'#ordermade' => $this->renderPartial('profile/ordermade'),
'#orderbilldata' => $this->renderPartial('profile/orderbilldata')
];



}

function onSelectmySavedCard(){
    $this['user'] = $user = Auth::getuser();
    $card =$this['card']= Codersocean\Honorpins\Models\PaymentMethod::where('id',post('id'))->first();
    $cartitems= Codersocean\Honorpins\Models\Cart::where('user_id',$user->id)->get();
  $this['cartitems']  =   $cartitems;
  $this['unitprice'] = 5;
  $this['tax'] = 2;
    return [
    '#selectedcardnowed' => $this->renderPartial('addcredit/selectedcards')
    ];
}
function onDiscard(){
      $this['user'] = $user = Auth::getuser();
  $cartitemsdel= Codersocean\Honorpins\Models\Cart::where('user_id',$user->id)->delete();
  $cartitems= Codersocean\Honorpins\Models\Cart::where('user_id',$user->id)->get();
$this['cartitems']  =   $cartitems;
$this['unitprice'] = 5;
$this['tax'] = 2;

  return [
  '#orderdata' => $this->renderPartial('profile/orderdata'),
  '#orderbilldata' => $this->renderPartial('profile/orderbilldata')
  ];
}
function onCancelOrder(){
      $this['user'] = $user = Auth::getuser();
  $cartitemsdel= Codersocean\Honorpins\Models\Cart::where('user_id',$user->id)->delete();


  return Redirect::to('/dashboard/organizations');

}
function onEditOrder(){
  $this['user'] = $user = Auth::getuser();
  $addcart = Codersocean\Honorpins\Models\Cart::where('id',post('id'))->first();
  $certificate = Codersocean\Honorpins\Models\Certificate::where('id',post('certificate'))->first();
  $addcart->name = post('name');
  $addcart->user_id = $user->id;
  $addcart->email = post('email');
  $addcart->phone = post('phone');
  $addcart->start_date = post('start_date');
  $addcart->end_date = post('end_date');
  $addcart->reg_number = post('reg_number');
  $addcart->certificate_id = post('certificate');
  $addcart->pin_id = $certificate->pin_id;
  $addcart->org_id = $certificate->org_id;
  $addcart->save();

  $cartitems= Codersocean\Honorpins\Models\Cart::where('user_id',$user->id)->get();
$this['cartitems']  =   $cartitems;
$this['unitprice'] = 5;
$this['tax'] = 2;
return [
'#orderdata' => $this->renderPartial('profile/orderdata'),
'#orderbilldata' => $this->renderPartial('profile/orderbilldata')
];
}
function onDeleteCartItem(){
    $this['user'] = $user = Auth::getuser();
  $deletecartitem  = Codersocean\Honorpins\Models\Cart::where('id',post('id'))->delete();
  $cartitems= Codersocean\Honorpins\Models\Cart::where('user_id',$user->id)->get();
$this['cartitems']  =   $cartitems;
$this['unitprice'] = 5;
$this['tax'] = 2;
return [
'#orderdata' => $this->renderPartial('profile/orderdata'),
'#orderbilldata' => $this->renderPartial('profile/orderbilldata')
];
}
function onRedirect(){
    $this['user'] = $user = Auth::getuser();
  $cartitems= Codersocean\Honorpins\Models\Cart::where('user_id',$user->id)->get();
$this['cartitems']  =   $cartitems;
$this['unitprice'] = 5;
$this['tax'] = 2;
return [
'#orderdata' => $this->renderPartial('profile/orderdata'),
'#orderbilldata' => $this->renderPartial('profile/orderbilldata')
];
}
function onAddOrder(){
    $this['user'] = $user = Auth::getuser();
    $check =Codersocean\Honorpins\Models\Cart::where('email',post('email'))->where('reg_number',post('reg_number'))->where('certificate_id',post('certificate'))->count();
    if($check == 0){
      $addcart = new Codersocean\Honorpins\Models\Cart;
      $certificate = Codersocean\Honorpins\Models\Certificate::where('id',post('certificate'))->first();
      $addcart->name = post('name');
      $addcart->user_id = $user->id;
      $addcart->email = post('email');
      $addcart->phone = post('phone');
      $addcart->start_date = post('start_date');
      $addcart->end_date = post('end_date');
      $addcart->reg_number = post('reg_number');
      $addcart->certificate_id = post('certificate');
      $addcart->pin_id = $certificate->pin_id;
      $addcart->org_id = $certificate->org_id;
      $addcart->save();
      $cartitems= Codersocean\Honorpins\Models\Cart::where('user_id',$user->id)->get();
$this['cartitems']  =   $cartitems;
$this['unitprice'] = 5;
$this['tax'] = 2;
return [
  '#orderdata' => $this->renderPartial('profile/orderdata'),
  '#orderbilldata' => $this->renderPartial('profile/orderbilldata')
];
    }else{
      $this['error'] = "Error: Dupilcate Entry";
      return [
        '#duplicateerror' => $this->renderPartial('profile/csverror')
      ];

    }



}
function onSendEmail(){
  $this['user'] = $user = Auth::getuser();
  $addorganization = Codersocean\Honorpins\Models\Organization::where('id',post('id'))->first();
  $datamail = [
              'name' => $user->name.' '.$user->surname,
              'code' => $addorganization->verification_code,

          ];
  Mail::send('organization.verification.code', $datamail, function($message) use ($addorganization) {
              $message->to($addorganization->org_email, $addorganization->org_email);
               $message->from('noreply@honorpins.com','Verification Messege');
          });
  return post('id');
}
function onStart(){
  $this['categories'] = Codersocean\Honorpins\Models\Categories::get();
  $this['user'] = $user = Auth::getuser();

  if(!$user){
    $redrect = '/login';
    return Redirect::to($redrect);
  }
  $organization =$this['organizations'] = Codersocean\Honorpins\Models\Organization::where('user_id',$user->id)->where('status',1)->get();
  $organiz = Codersocean\Honorpins\Models\Organization::where('user_id',$user->id)->where('status',1)->first();
  $this['selectedorganizations'] = $organiz;
  //$certificates=  $this['certificates'] = Codersocean\Honorpins\Models\Certificate::where('org_id',$organization->id)->get();
  $cartitems=  $this['cartitems'] = Codersocean\Honorpins\Models\Cart::where('user_id',$user->id)->get();
  $this['unitprice'] = 5;
  $this['tax'] = 2;

}


?>
==
<link href="{{ 'assets/css/dashboard.css'|theme }}" rel="stylesheet">
<link href="{{ 'assets/css/switch.css'|theme }}" rel="stylesheet">
<link rel="stylesheet" href="{{'assets/css/bootstrap-datetimepicker.min.css'|theme}}">
<link href="{{'assets/css/dropify.min.css'|theme}}" rel="stylesheet" type="text/css" />
<link rel="stylesheet" type="text/css" href="{{'assets/sweetalert.css'|theme}}">
<!-- <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.4/css/bootstrap.min.css"> -->
<link rel="stylesheet" href="{{'assets/css/bootstrapValidator.min.css'|theme}}">
<!-- <link rel="stylesheet" href="https://www.simon.com/rewardcard/dist/styles/rewardcard.min.css"> -->
<style>


.file-control {
    background-color: #fff;
    border: 1px solid #757575;
    color: #000;
    font-weight: 400;
    height: 53px;
    left: 0;
    line-height: 1.25;
  padding: 16.799px 21.999px !important;

    position: absolute;
    right: 0;
    top: 0;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
    z-index: 1;
    transition: background-color .15s ease-out;
  }
  .file-control:before {
    background-color: #1cb9c8;
    border: 1px solid #1cb9c8;
    bottom: -1px;
    color: #fff;
    content: "BROWSE";
    display: block;
    font-family: Arial,Helvetica,sans-serif;
    height: 53px;
    letter-spacing: .05em;
    line-height: 1.25;
  padding: 16.799px 21.999px !important;

    position: absolute;
    right: -1px;
    top: -1px;
    z-index: 2;
    transition: background-color .15s ease-out;
}
.file-input {
    filter: alpha(opacity = 0);
    margin: 0;
    max-width: 100%;
    min-width: 290px;
    opacity: 0;
}
.file {
    cursor: pointer;
    display: inline-block;
    /* font-size: 13.298px; */

    font-size: 1.2696rem;
    height: 53px;
    max-width: 100%;
    position: relative;
}
.file-control {
  overflow: hidden;
}

.file-control:after {
  content: attr(data-filename);
}

</style>
  <link href="{{ 'assets/css/payment.css'|theme }}" rel="stylesheet">
<section>

    <script>
        $(document).ready(function() {
            $(".collapse").on('show.bs.collapse', function() {
                $(this).addClass("nav-tabs");
                $(this).parent().find(".pull-right").removeClass("fa-angle-right");

                $(this).parent().find(".pull-right").addClass("fa-angle-down");
            }).on('hide.bs.collapse', function() {
                $(this).removeClass("nav-tabs");
                $(this).parent().find(".pull-right").removeClass("fa-angle-down");

                $(this).parent().find(".pull-right").addClass("fa-angle-right");
            });
        });
    </script>
    <div class="header-space"></div>
    <div class="container mt-65 py-5">
        <div class="row">

            <div class="col-lg-12 text-center">
                <h2>Order Certificate Virtual Pin</h2>
            </div>

            <div class="col-lg-12">
                <div class="tab-content" id="nav-tabContent">
                    <div class="tab-pane fade show active " id="nav-status" role="tabpanel" aria-labelledby="nav-status-tab">
                        <div class="row">
                            <div class="col-md-3 col-lg-3 my-3">
                              <div class="upload-btn-wrapper myshadow">
                                    <button type="submit" class="btn btn btn-primary" data-toggle="modal" data-target="#addfilemodal">upload from a file</button>
                                </div>
                            </div>
                            <div class="col-md-2 col-lg-2 my-3">

                                <button type="submit" class="btn btn btn-primary" data-toggle="modal" data-target="#addpinmodal">manual</button>
                            </div>

                            <div class="col-md-2  ml-auto" style="    padding-top: 3rem!important;    padding-bottom: 1rem!important;">
                                <p>Pins Included</p>
                            </div>
                            <div class="col-md-2  " style="    padding-top: 3rem!important;    padding-bottom: 1rem!important;">

                                <div class="switch-block">
                                    <label class="switch-light switch-material float-right">
                                        <input type="checkbox" id="myCheck" onclick="myFunction()" />

                                        <span>
                                            <span>on</span>
                                            <span>off</span>
                                            <a></a>
                                        </span>
                                    </label>
                                </div>
                            </div>




                        </div>
                        <link href="{{ 'adminassets/libs/select2/select2.css'|theme }}" rel="stylesheet">

                        <style>
                            .bootstrap-select .dropdown-menu {
                                top: 27px !important;
                            }

                            .bootstrap-select .dropdown-menu li a {
                                padding-top: 12px;
                                padding-bottom: 12px;
                                font-size: 18px;
                            }
                        </style>
                        <div class="modal fade " id="checkoutmodal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLongTitle" aria-hidden="true">
                            <div class="modal-dialog modal-lg" role="document">
                                <div class="modal-content">
                                    <div class="modal-header">
                                        <h3 id="checkoutmodalTitle" class="ml-5">Make Payment</h3>
                                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                            <span aria-hidden="true">&times;</span>
                                        </button>
                                    </div>
                                    <div class="modal-body">
                                        <div class="row px-5">
                                            <div class="col-md-7 ml-auto mr-auto mt-5">
                                                <h5 class="center h5">SELECT PAYMENT METHODS</h5>
                                            </div>
                                            <div class="col-md-6 ml-auto mr-auto mt-5">

                                                <div class="options vcenter">
                                                    <a href="#" onclick="selectcreditcard()" id="creditcardselect" class="opt ml-2">
                                                        <div class="icon center">
                                                            <i class="fas fa-credit-card creditcardselect"></i>
                                                        </div>
                                                        <div class="optname center creditcardselect">Credit/Debit Card</div>
                                                    </a>

                                                    <a href="#" onclick="paypalselect()" class="opt ml-5" id="paypalselect">
                                                        <div class="icon center">
                                                            <i class="fab fa-paypal paypalselect"></i>
                                                        </div>
                                                        <div class="optname center paypalselect">PayPal</div>
                                                    </a>
                                                </div>
                                            </div>
                                            <div class="col-md-10 mt-15 row ml-auto mr-auto" style="display:none;" id="creditc">
                                                <div class="col-md-9">
                                                    <div class="form-group">
                                                        <select name="certificate" id="onchangeselectcard" required class="selectpicker" data-style="btn-default" data-live-search="true">
                                                            <option value="0">Select from Your Saved Cards</option>
                                                            {%for card in user.cards %}
                                                            <option value="{{card.id}}">XXX-XXXX-XXXX-{{card.last_digit}} - {{card.brand}}</option>
                                                            {%endfor%}
                                                        </select>
                                                    </div>
                                                </div>
                                                <div class="col-md-3">
                                                    <a href="#" onclick="addnewcard()" class="btn btn-outline-dark myshadow pull-right ml-5" style="border-radius: 3.25rem;"><i class="fas fa-plus text-dark"></i> New</a>

                                                </div>
                                            </div>
                                            <div class="col-md-10 mt-15 row ml-auto mr-auto" style="display:none;" id="paypal">
                                                <p>Paypal Inte3gration is not Completed yet</p>

                                            </div>
                                            <div class="col-md-12 mt-15 row" style="display:none" id="addnewcard">
                                                {%partial 'addcredit/addcredit'%}


                                            </div>
                                            <div class="col-md-12 mt-15 row" style="display:none" id="selectedcardnowed">


                                            </div>

                                        </div>
                                    </div>
                                    <script>
                                        function addnewcard() {
                                            document.getElementById('addnewcard').style.display = 'flex'
                                            document.getElementById('selectedcardnowed').style.display = 'none'
                                        }

                                        $('#onchangeselectcard').change(function() {
                                            var selectedItem = $('.selectpicker').val();
                                            document.getElementById('addnewcard').style.display = 'none'
                                            document.getElementById('selectedcardnowed').style.display = 'flex'
                                            document.getElementById('selectedcardnowed').innerHTML = '  <div class="col-md-3 ml-auto mr-auto"><i class="fa-spin fa fa-spinner font-34 text-primary"></i></div>'

                                            var AddTrainer = $.request('onSelectmySavedCard', {
                                                flash: 1,
                                                data: {
                                                    id: selectedItem
                                                }
                                            }).done(function(data) {

                                                return data;
                                            });
                                        });
                                    </script>
                                </div>
                            </div>
                        </div>
                        <div class="modal fade " id="addfilemodal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLongTitle" aria-hidden="true">
                            <div class="modal-dialog modal-lg" role="document">
                                <div class="modal-content">
                                    <div class="modal-header">
                                        <h3 id="exampleModalLongTitle">Upload from file</h3>
                                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                            <span aria-hidden="true">&times;</span>
                                        </button>
                                    </div>
                                    <form data-request='onSaveFile' data-request-files method="post">
                                        <div class="modal-body">
                                            <div class="row px-5">
                                                <div class="col-md-7">
                                                    <div class="form-group">
                                                        <label>Select Certificate</label>
                                                        <select name="certificate" required class="selectpicker" data-style="btn-default" data-live-search="true">
                                                            {%for organization in organizations %}
                                                            <optgroup label="{{organization.org_name}}">
                                                                {%for certificate in organization.certificates %}
                                                                <option value="{{certificate.id}}">{{certificate.title}}</option>
                                                                {%endfor%}
                                                            </optgroup>
                                                            {%endfor%}
                                                        </select>
                                                    </div>
                                                </div>

                                                <div class="col-md-5 ">
                                                  <div class="form-group mt-30">

           <label class="file">
             <input type="file" id="file" name="excelfile" class="file-input">
             <span class="file-control" data-filename="Choose File..."></span>
           </label>
         </div>

                                                </div>

                                                <div class="col-md-12 text-center" id="csverror">



                                                </div>

                                            </div>
                                        </div>
                                        <div class="modal-footer">
                                            <a class="btn btn-primary" href="/storage/app/uploads/example/example_holders.xlsx" download>Download Example File</a>
                                            <button type="submit" class="btn btn-primary">Upload</button>
                                        </div>
                                    </form>
                                    <script>
                                        $('#selectorganization').on('change', function() {
                                            var AddTrainer = $.request('onSelectOrganization', {
                                                data: {
                                                    id: this.value
                                                }
                                            }).done(function(data) {})
                                        });
                                    </script>
                                </div>
                            </div>
                        </div>
                        <script src="{{'assets/js/dropify.min.js'|theme}}"></script>

                        <script type="text/javascript">
                        /*
Custom File Input
By: Alex Sperellis

Inspired and Uses Bootstrap 4 Custom File:
https://v4-alpha.getbootstrap.com/components/forms/#file-browser

Description:
Custom Styled File Input for HTML Forms. JS used to update content property when file selection is made by the user.
*/

var customFileInput = function (inputID) {
  //set id of input based on params passed in. default is file
  const id = inputID || "file";
  const fileInput = $("#" + id);

  //on change of file input
  fileInput.change(function () {
    //full file path
    const fullPath = document.getElementById(id).value;
    if (fullPath) {
      //index last index location of file path slashes
      const startIndex = fullPath.indexOf('\\') >= 0 ? fullPath.lastIndexOf('\\') : fullPath.lastIndexOf('/');
      //remove the excess of path
      let filename = fullPath.substring(startIndex);
      //clear out the final \ or / if exists
      if (filename.indexOf('\\') === 0 || filename.indexOf('/') === 0) {
        filename = filename.substring(1);
      }
      //change data attr of html element to update the file name
      $('.file-control').attr('data-filename', filename);
    }
  });
};

//optional param: input id as string - no hash(#) needed
customFileInput();
                            $('.dropify').dropify({
                                messages: {
                                    'default': 'Drag and drop a Excel Sheet for Bulk order',
                                    'replace': 'Drag and drop or click to replace',
                                    'remove': 'Remove',
                                    'error': 'Ooops, something wrong appended.'
                                },
                                error: {
                                    'fileSize': 'The file size is too big ({{value}} max).',
                                    'imageFormat': 'The image format is not allowed ({{ value }} only).'
                                }
                            });
                        </script>
                        <div class="modal fade " id="addpinmodal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLongTitle" aria-hidden="true">
                            <div class="modal-dialog modal-lg" role="document">
                                <div class="modal-content" id="completepin">
                                    <div class="modal-header">
                                        <h3 id="exampleModalLongTitle">Create Order</h3>
                                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                            <span aria-hidden="true">&times;</span>
                                        </button>
                                    </div>
                                    <form data-request='onAddOrder'>
                                        <div class="modal-body">
                                            <div class="row px-5">
                                                <div class="col-md-12">
                                                    <div class="form-group">
                                                        <label>Select Certificate</label>
                                                        <select name="certificate" required class="selectpicker" data-style="btn-default" data-live-search="true">
                                                            {%for organization in organizations %}
                                                            <optgroup label="{{organization.org_name}}">
                                                                {%for certificate in organization.certificates %}
                                                                <option value="{{certificate.id}}">{{certificate.title}}</option>
                                                                {%endfor%}
                                                            </optgroup>
                                                            {%endfor%}
                                                        </select>
                                                    </div>
                                                </div>

                                                <div class="col-lg-6">
                                                    <div class="form-group">
                                                        <label>Full Name</label>
                                                        <input type="text" required name="name" class="form-control">
                                                    </div>
                                                </div>
                                                <div class="col-lg-6">
                                                    <div class="form-group">
                                                        <label>Registration Number</label>
                                                        <input type="text" required name="reg_number" class="form-control">
                                                    </div>
                                                </div>
                                                <div class="col-md-6">
                                                    <div class="form-group">
                                                        <label for="startDate">Start Date</label>
                                                        <input id="startDate" required name="start_date" type="text" class="form-control" />
                                                    </div>
                                                </div>
                                                <div class="col-md-6">
                                                    <div class="form-group">
                                                        <label for="endDate">End Date</label>
                                                        <input id="endDate" required name="end_date" type="text" class="form-control" />
                                                    </div>
                                                </div>
                                                <div class="col-lg-6">
                                                    <div class="form-group">
                                                        <label>Email</label>
                                                        <input type="email" required name="email" class="form-control">
                                                    </div>
                                                </div>
                                                <div class="col-lg-6">
                                                    <div class="form-group">
                                                        <label>Phone</label>
                                                        <input type="tel" required name="phone" class="form-control">
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="row text-center">
                                                <div class="col-md-12 text-center" id="duplicateerror">

                                                </div>
                                            </div>
                                        </div>
                                        <div class="modal-footer">
                                            <button type="submit" class="btn btn-primary"><i class="fas fa-plus"></i> Add</button>
                                        </div>
                                    </form>
                                    <script>
                                        $('#selectorganization').on('change', function() {
                                            var AddTrainer = $.request('onSelectOrganization', {
                                                data: {
                                                    id: this.value
                                                }
                                            }).done(function(data) {})
                                        });
                                    </script>
                                </div>
                            </div>
                        </div>
                        <div class="modal fade " id="editcartitemmodal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLongTitle" aria-hidden="true">
                            <div class="modal-dialog modal-lg" role="document">
                                <div class="modal-content" id="editcartitemmodalpin">
                                    <div class="modal-header">
                                        <h3 id="editcartitemmodalTitle">Create Order</h3>
                                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                            <span aria-hidden="true">&times;</span>
                                        </button>
                                    </div>
                                    <form data-request='onEditOrder'>
                                        <div class="modal-body">
                                            <div class="row px-5">
                                                <div class="col-md-12">
                                                    <div class="form-group">
                                                        <label>Select Certificate</label>
                                                        <input type="hidden" name="id" id="edit-order-id" />
                                                        <select name="certificate" id="edit-order-certificate-id" required class="selectpicker" data-style="btn-default" data-live-search="true">
                                                            {%for organization in organizations %}
                                                            <optgroup label="{{organization.org_name}}">
                                                                {%for certificate in organization.certificates %}
                                                                <option value="{{certificate.id}}">{{certificate.title}}</option>
                                                                {%endfor%}
                                                            </optgroup>
                                                            {%endfor%}
                                                        </select>
                                                    </div>
                                                </div>

                                                <div class="col-lg-6">
                                                    <div class="form-group">
                                                        <label>Full Name</label>
                                                        <input type="text" id="edit-order-name" required name="name" class="form-control">
                                                    </div>
                                                </div>
                                                <div class="col-lg-6">
                                                    <div class="form-group">
                                                        <label>Registration Number</label>
                                                        <input type="text" required id="edit-order-reg" name="reg_number" class="form-control">
                                                    </div>
                                                </div>
                                                <div class="col-md-6">
                                                    <div class="form-group">
                                                        <label for="editstartDate">Start Date</label>
                                                        <input id="editstartDate" required name="start_date" type="text" class="form-control" />
                                                    </div>
                                                </div>
                                                <div class="col-md-6">
                                                    <div class="form-group">
                                                        <label for="editendDate">End Date</label>
                                                        <input id="editendDate" required name="end_date" type="text" class="form-control" />
                                                    </div>
                                                </div>
                                                <div class="col-lg-6">
                                                    <div class="form-group">
                                                        <label>Email</label>
                                                        <input type="email" required id="edit-order-email" name="email" class="form-control">
                                                    </div>
                                                </div>
                                                <div class="col-lg-6">
                                                    <div class="form-group">
                                                        <label>Phone</label>
                                                        <input type="tel" required id="edit-order-phone" name="phone" class="form-control">
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="row text-center">
                                                <div class="col-md-12 text-center" id="duplicateerror">

                                                </div>
                                            </div>
                                        </div>
                                        <div class="modal-footer">
                                            <button type="submit" class="btn btn-primary">Edit</button>
                                        </div>
                                    </form>
                                    <script>
                                        $('#selectorganization').on('change', function() {
                                            var AddTrainer = $.request('onSelectOrganization', {
                                                data: {
                                                    id: this.value
                                                }
                                            }).done(function(data) {})
                                        });
                                    </script>
                                </div>
                            </div>
                        </div>
                        <input type="hidden" name="total" id="total" />
                        <div class="row" id="orderdata">

                            {%partial 'profile/orderdata'%}



                        </div>
                        <div id="ordermade">
                        </div>



                        <script>
                            function myFunction() {
                                // Get the checkbox
                                var checkBox = document.getElementById("myCheck");
                                var text = document.getElementById("text");
                                console.log('hello')
                                if (checkBox.checked == true) {
                                    // If the checkbox is checked, display the output text
                                    document.getElementById('total').value = '{{cartitems|length * unitprice + tax}}'
                                    document.getElementById('billtable').style.display = 'block'
                                    document.getElementById('checkedtotal').style.display = 'block'
                                    document.getElementById('uncheckedtotal').style.display = 'none'
                                    document.getElementById('finishbutton').style.display = 'none'
                                    document.getElementById('checkoutbutton').style.display = 'block'
                                } else {
                                    console.log('uncheck')
                                    document.getElementById('total').value = 0
                                    document.getElementById('billtable').style.display = 'none'
                                    document.getElementById('checkedtotal').style.display = 'none'
                                    document.getElementById('uncheckedtotal').style.display = 'none'
                                    document.getElementById('finishbutton').style.display = 'block'
                                    document.getElementById('checkoutbutton').style.display = 'none'
                                }
                            }
                            $(document).ready(function() {
                                var checkBox = document.getElementById("myCheck");
                                if (checkBox.checked == true) {
                                    // If the checkbox is checked, display the output text
                                    document.getElementById('total').value = '{{cartitems|length * unitprice + tax}}'
                                    document.getElementById('billtable').style.display = 'block'
                                    document.getElementById('checkedtotal').style.display = 'block'
                                    document.getElementById('uncheckedtotal').style.display = 'none'
                                    document.getElementById('finishbutton').style.display = 'none'
                                    document.getElementById('checkoutbutton').style.display = 'block'
                                } else {
                                    console.log('uncheck')
                                    document.getElementById('total').value = 0
                                    document.getElementById('billtable').style.display = 'none'
                                    document.getElementById('checkedtotal').style.display = 'none'
                                    document.getElementById('uncheckedtotal').style.display = 'none'
                                    document.getElementById('finishbutton').style.display = 'block'
                                    document.getElementById('checkoutbutton').style.display = 'none'
                                }
                                $('#addfilemodal').modal('hide');
                                $('#addpinmodal').modal('hide');
                            });
                        </script>

                        <div class="row" id="orderbilldata">

                            {%partial 'profile/orderbilldata'%}



                        </div>

                    </div>
                </div>
            </div>
        </div>

        <div class="header-space"></div>
</section>

<script src="{{'assets/js/moment.min.js'|theme}}"></script>

<script src="{{'assets/js/datetimepicker.min.js'|theme}}"></script>
<script src="{{'assets/js/bootstrapValidator.min.js'|theme}}"></script>
<script src="{{'assets/js/sweet-alert.min.js'|theme}}"></script>
<script type="text/javascript">
    function editcartitem(id, certificate_id, email, start_date, end_date, regnumber, phone, name) {
        document.getElementById('edit-order-id').value = id;
        document.getElementById('edit-order-certificate-id').value = certificate_id;
        document.getElementById('edit-order-name').value = name;
        document.getElementById('edit-order-reg').value = regnumber;
        document.getElementById('editstartDate').value = start_date;
        document.getElementById('editendDate').value = end_date;
        document.getElementById('edit-order-email').value = email;
        document.getElementById('edit-order-phone').value = phone;
        $('#editstartDate').datetimepicker({
            pickTime: false,
            format: "YYYY-MM-DD",
            defaultDate: start_date
        });

        $('#editendDate').datetimepicker({
            pickTime: false,
            format: "YYYY-MM-DD",
            defaultDate: end_date,
            minDate: start_date
        });
        $('.selectpicker').selectpicker('refresh')

    }

    function cartitemdelete(id) {

        swal({
                title: "Delete Confirmation?",
                text: "Are you sure you want to delete this Order Item?",
                type: "error",
                showCancelButton: true,
                confirmButtonColor: '#DD6B55',
                confirmButtonText: 'Yes, delete it!',
                cancelButtonText: "No, cancel plx!",
                closeOnConfirm: false,
                closeOnCancel: false
            },
            function(isConfirm) {
                if (isConfirm) {
                    var AddTrainer = $.request('onDeleteCartItem', {
                        data: {
                            id: id
                        }
                    }).done(function(data) {
                        swal("Deleted!", "Order Item has been deleted!", "success");
                        swal({
                                title: "Deleted!",
                                text: "Order Item has been deleted!",
                                type: "success",
                                showCancelButton: false,
                                confirmButtonColor: '#DD6B55',
                                confirmButtonText: 'OK',
                                closeOnConfirm: true,
                                closeOnCancel: false
                            },
                            function(isConfirm) {
                                var AddTrainer = $.request('onRedirect', {
                                    data: {
                                        redirect: '/dashboard/organization-certificates/{{this.param.id}}'
                                    }
                                }).done(function(data) {});

                            });
                    })

                } else {
                    swal("Cancelled", "Your Item is safe :)", "error");
                }
            });

    }
    var bindDateRangeValidation = function(f, s, e) {
        if (!(f instanceof jQuery)) {
            console.log("Not passing a jQuery object");
        }

        var jqForm = f,
            startDateId = s,
            endDateId = e;

        var checkDateRange = function(startDate, endDate) {
            var isValid = (startDate != "" && endDate != "") ? startDate <= endDate : true;
            return isValid;
        }

        var bindValidator = function() {
            var bstpValidate = jqForm.data('bootstrapValidator');
            var validateFields = {
                startDate: {
                    validators: {
                        notEmpty: {
                            message: 'This field is required.'
                        },
                        callback: {
                            message: 'Start Date must less than or equal to End Date.',
                            callback: function(startDate, validator, $field) {
                                return checkDateRange(startDate, $('#' + endDateId).val())
                            }
                        }
                    }
                },
                endDate: {
                    validators: {
                        notEmpty: {
                            message: 'This field is required.'
                        },
                        callback: {
                            message: 'End Date must greater than or equal to Start Date.',
                            callback: function(endDate, validator, $field) {
                                return checkDateRange($('#' + startDateId).val(), endDate);
                            }
                        }
                    }
                },
                customize: {
                    validators: {
                        customize: {
                            message: 'customize.'
                        }
                    }
                }
            }
            if (!bstpValidate) {
                jqForm.bootstrapValidator({
                    excluded: [':disabled'],
                })
            }

            jqForm.bootstrapValidator('addField', startDateId, validateFields.startDate);
            jqForm.bootstrapValidator('addField', endDateId, validateFields.endDate);

        };

        var hookValidatorEvt = function() {
            var dateBlur = function(e, bundleDateId, action) {
                jqForm.bootstrapValidator('revalidateField', e.target.id);
            }

            $('#' + startDateId).on("dp.change dp.update blur", function(e) {
                $('#' + endDateId).data("DateTimePicker").setMinDate(e.date);
                dateBlur(e, endDateId);
            });

            $('#' + endDateId).on("dp.change dp.update blur", function(e) {
                $('#' + startDateId).data("DateTimePicker").setMaxDate(e.date);
                dateBlur(e, startDateId);
            });
        }

        bindValidator();
        hookValidatorEvt();
    };


    $(function() {
        var sd = new Date(),
            ed = new Date();

        $('#startDate').datetimepicker({
            pickTime: false,
            format: "YYYY-MM-DD",
            defaultDate: sd,
            maxDate: ed
        });

        $('#endDate').datetimepicker({
            pickTime: false,
            format: "YYYY-MM-DD",

        });

        $('#editstartDate').datetimepicker({
            pickTime: false,
            format: "YYYY-MM-DD",

        });

        $('#editendDate').datetimepicker({
            pickTime: false,
            format: "YYYY-MM-DD",
            defaultDate: ed,
            minDate: sd
        });

        //passing 1.jquery form object, 2.start date dom Id, 3.end date dom Id
        bindDateRangeValidation($("#form"), 'startDate', 'endDate');
    });

    function sendemail(id) {
        console.log(id)
        var loader = 'spinner' + id;
        var messege = 'successfullysent' + id;
        document.getElementById(loader).style.display = 'block'
        document.getElementById(messege).style.display = 'none'
        $.request('onSendEmail', {
            data: {
                id: id
            }
        }).done(function(data) {
            document.getElementById(loader).style.display = 'none'
            document.getElementById(messege).style.display = 'block'
            return data;
        });

    }

    function selectcreditcard() {


        document.getElementById('paypal').style.display = 'none'
        document.getElementById('creditc').style.display = 'flex'
        $('#creditcardselect').addClass('bg-primary');
        $('.creditcardselect').addClass('text-white');
        $('#paypalselect').removeClass('bg-primary');
        $('.paypalselect').removeClass('text-white');
    }

    function paypalselect() {
        document.getElementById('paypal').style.display = 'block'
        document.getElementById('creditc').style.display = 'none'
        $('#paypalselect').addClass('bg-primary');
        $('.paypalselect').addClass('text-white');
        $('#creditcardselect').removeClass('bg-primary');
        $('.creditcardselect').removeClass('text-white');
    }

    function sendemailadd(id) {
        console.log(id)
        document.getElementById('spinneradd').style.display = 'block'
        document.getElementById('successfullysentadd').style.display = 'none'
        $.request('onSendEmail', {
            data: {
                id: id
            }
        }).done(function(data) {
            document.getElementById('spinneradd').style.display = 'none'
            document.getElementById('successfullysentadd').style.display = 'block'
            return data;
        });

    }
</script>
