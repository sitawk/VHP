title = "User Dashboard"
url = "/dashboard/manage-certificates"
layout = "default"
[account]
redirect=0
[session]
[Dashboard]
==
<?php
use Intervention\Image\ImageManagerStatic as Image;
function onEditCertificate(){
  $addorganization = Codersocean\Honorpins\Models\Certificate::where('id',post('id'))->first();
  return $addorganization;
}

function onChangePublicCode(){
  $addorganization = Codersocean\Honorpins\Models\HolderPins::where('id',post('id'))->first();
  $addorganization->public_access_code = post('value');
  $addorganization->save();
    $this['user'] = $user = Auth::getuser();
  return [
  '#organizationcertificate' => $this->renderPartial('profile/personalcertificates')
  ];
}
function onChangePrivateCode(){
    $this['user'] = $user = Auth::getuser();
  $addorganization = Codersocean\Honorpins\Models\HolderPins::where('id',post('id'))->first();
  $addorganization->private_access_code = post('value');
  $addorganization->save();
  return [
  '#organizationcertificate' => $this->renderPartial('profile/personalcertificates')
  ];
}
function onSendEmail(){
  $this['user'] = $user = Auth::getuser();
  $addorganization = Codersocean\Honorpins\Models\Organization::where('id',post('id'))->first();
  $datamail = [
              'name' => $user->name.' '.$user->surname,
              'code' => $addorganization->verification_code,

          ];
  Mail::send('organization.verification.code', $datamail, function($message) use ($addorganization) {
              $message->to($addorganization->org_email, $addorganization->org_email);
               $message->from('noreply@honorpins.com','Verification Messege');
          });
  return post('id');
}

function onEnablePin(){
  $check = Codersocean\HonorPins\Models\HolderPins::where('id',post('id'))->first();
  $check->availbility = 1;
  $check->save();
  $user = $this['user']= Auth::getuser();
  return [
  '#organizationcertificate' => $this->renderPartial('profile/personalcertificates')
  ];
}
function onDisablePin(){
  $check = Codersocean\HonorPins\Models\HolderPins::where('id',post('id'))->first();
  $check->availbility = 0;
  $check->save();
  $user = $this['user']= Auth::getuser();
  return [
  '#organizationcertificate' => $this->renderPartial('profile/personalcertificates')
  ];
}
function onBuyPinWithSavingCard(){
  if(post('is_saving') == 1){
    $user = $this['user']= Auth::getuser();
    $add = new Codersocean\Honorpins\Models\PaymentMethod;
    $add->cus_id = post('cus_id');
    $add->name = post('name');
    $add->type = post('type');
    $add->brand = post('brand');
    $add->last_digit = post('last_digit');
    $add->ex_date = post('exp');
    $add->user_id = $user->id;
    $add->save();
  }
  $this['user'] = $user = Auth::getuser();
$this['user'] = $user = Auth::getuser();
$certificates = Codersocean\Honorpins\Models\HolderPins::where('id',post('buy_id'))->where('email',$user->email)->first();
  $card = Codersocean\Honorpins\Models\PaymentMethod::where('cus_id',post('cus'))->first();


      $log = new Codersocean\Honorpins\Models\PaymentLogs;
      $log->user_id = $user->id;
      $log->amount = post('amountpaid');
      $log->items = 1;
      $log->payment_method = post('type');
      $log->transaction_id = post('transaction_id');
      $log->receipt_url = post('receipt_url');
      $log->charge_id = post('charge_id');
      $log->refund_url = post('refund_url');
      $log->save();
      $certificates->pin_status = 1;
      $certificates->save();


      return [
      '#organizationcertificate' => $this->renderPartial('profile/personalcertificates')
      ];
}
function onStart(){
  $this['categories'] = Codersocean\Honorpins\Models\Categories::get();
  $this['user'] = $user = Auth::getuser();
  $this['unitprice'] = 5;
  $this['tax'] = 2;
  if(!$user){
    $redrect = '/login';
    return Redirect::to($redrect);
  }


}
function onRedirect(){
  $user = Auth::getuser();
    $this['user'] = $user;
  $this['addpin'] = 0;
    $this['categories'] = Codersocean\Honorpins\Models\Categories::get();
    return [
    '#completecertificate' => $this->renderPartial('profile/addcertificate'),
        '#createcertificatebutton' => $this->renderPartial('userdashboard/createcertificatebutton'),
        '#organizationcertificate' => $this->renderPartial('profile/organizationcertificates'),
    ];
}
function onVerifyOrganization(){
  $organization  = Codersocean\Honorpins\Models\Organization::where('id',post('id'))->first();
  if($organization->verification_code == post('code')){
    $organization->status = 1;
    $organization->save();
    $this['addorganization'] = 1;
    $this['verifiedorganization'] = 1;
    return [
        '#completeorganization' => $this->renderPartial('profile/addorganization')
    ];
  }else{
    $this['error'] = 'Your Verification Code is not Valid!';
    return [
        '#verifycheck' => $this->renderPartial('profile/error')
    ];
  }


}
function onAcitvateOrganization(){
  $organization  = Codersocean\Honorpins\Models\Organization::where('id',post('id'))->first();
  if($organization->verification_code == post('code')){
    $organization->status = 1;
    $organization->save();
  //dd('hello');
    $this['verifiedorganization'] = 1;
    return [
        "#activation".post('id')."completed" => $this->renderPartial('profile/activateorganization')
    ];
  }else{
    $this['error'] = 'Your Verification Code is not Valid!';
    return [
        '#activateverifycheck' => $this->renderPartial('profile/error')
    ];
  }


}
function onDeleteCertificate(){
  $deletecertificate  = Codersocean\Honorpins\Models\Certificate::where('id',post('id'))->delete();
  $user = Auth::getuser();
    $this['user'] = $user;
  $this['addpin'] = 0;
    $this['categories'] = Codersocean\Honorpins\Models\Categories::get();
    return [
    '#completecertificate' => $this->renderPartial('profile/addcertificate'),
        '#createcertificatebutton' => $this->renderPartial('userdashboard/createcertificatebutton'),
        '#organizationcertificate' => $this->renderPartial('profile/organizationcertificates'),
    ];
}
function onAvatar(){
$user = Auth::getuser();
$update = RainLab\User\Models\User::where('id',$user->id)->first();
$update->avatar = Input::file('customFile');
$update->save();
$this['user'] = $user = Auth::getuser();
return [
        '#updateprofile' => $this->renderPartial('profile/profilesetting')
    ];

}

function onGetLogo(){
  $images = Input::file('customFile');
$user =Auth::getuser();
$fileName = 'logo'.$user->id.'_'.'.'.$images->getClientOriginalExtension();
$fileName = str_replace(' ', '_', $fileName);
$image='logo';
  $this['prganizationlogo'] ='/storage/app/uploads/web/'.$fileName;
    $images->move(public_path('/storage/app/uploads/web/'), $fileName);
$this['photocaptured'] = 1;
return [
        '#addlogo' => $this->renderPartial('profile/addlogo')
    ];

}
function onCloseModal(){
$user = Auth::getuser();
  $this['user'] = $user;
$this['addpin'] = 0;
  $this['categories'] = Codersocean\Honorpins\Models\Categories::get();
  return [
  '#completecertificate' => $this->renderPartial('profile/addcertificate'),
      '#createcertificatebutton' => $this->renderPartial('userdashboard/createcertificatebutton'),
      '#organizationcertificate' => $this->renderPartial('profile/organizationcertificates'),
  ];
}
function onSelectmySavedCard(){
    $this['user'] = $user = Auth::getuser();
    $card =$this['card']= Codersocean\Honorpins\Models\PaymentMethod::where('id',post('id'))->first();
  $this['unitprice'] = 5;
  $this['tax'] = 2;
    return [
    '#selectedcardnowed' => $this->renderPartial('addcredit/singlepinselectedcard')
    ];
}
function onCheckoutwithourSavedCards(){
  $this['user'] = $user = Auth::getuser();
  $certificates = Codersocean\Honorpins\Models\HolderPins::where('id',post('buy_id'))->where('email',$user->email)->first();
    $card = Codersocean\Honorpins\Models\PaymentMethod::where('cus_id',post('cus'))->first();

        $log = new Codersocean\Honorpins\Models\PaymentLogs;
        $log->user_id = $user->id;
        $log->amount = post('amountpaid');
        $log->items = 1;
        $log->payment_method = $card->type;
        $log->transaction_id = post('transaction_id');
        $log->receipt_url = post('receipt_url');
        $log->charge_id = post('charge_id');
        $log->refund_url = post('refund_url');
        $log->save();
        $certificates->pin_status = 1;
        $certificates->save();


        return [
        '#organizationcertificate' => $this->renderPartial('profile/personalcertificates')
        ];
  }
?>
==
<link href="{{ 'assets/css/payment.css'|theme }}" rel="stylesheet">

<link href="{{ 'assets/css/dashboard.css'|theme }}" rel="stylesheet">
<link rel="stylesheet" type="text/css" href="{{'assets/sweetalert.css'|theme}}">
<section>
  <style>
  .collapse .nav-item {

  }
  .rotateas{
-webkit-transform: rotate(90deg);  /* Chrome, Safari, Opera */
-moz-transform: rotate(90deg);  /* Firefox */
-ms-transform: rotate(90deg);  /* IE 9 */
transform: rotate(90deg);  /* Standard syntax */
}
  </style>
  <script>
$(document).ready(function(){
// Add minus icon for collapse element which is open by default


// Toggle plus minus icon on show hide of collapse element
$(".collapse").on('show.bs.collapse', function(){
$(this).addClass("nav-tabs");
  $(this).parent().find(".pull-right").removeClass("fa-angle-right");

      $(this).parent().find(".pull-right").addClass("fa-angle-down");
}).on('hide.bs.collapse', function(){
  $(this).removeClass("nav-tabs");
$(this).parent().find(".pull-right").removeClass("fa-angle-down");

    $(this).parent().find(".pull-right").addClass("fa-angle-right");
});
});
</script>
    <div class="header-space"></div>
    <div class="container mt-65 py-5">
        <div class="row">
            <div class="col-lg-12 text-center">
                <h2>My Certificates</h2>
            </div>

            <div class="col-lg-12">
                <div class="tab-content">
                    <div class="tab-pane fade show active" role="tabpanel" aria-labelledby="nav-status-tab">
                      {%set count = 0%}
                      {% for certificate in user.emails%}
                      {% for certificates in certificate.personalcertificates%}
                    
                      {%set count = count+1%}
                      {%endfor%}
                      {%endfor%}
                          {%  if count > 0 %}
                        <div id="organizationcertificate">
                            {% partial 'profile/personalcertificates'%}
                        </div>
                        {%else%}
                        <div class="row " style="height: 250px;">
                            <div class="col-lg-4 text-center ml-auto mr-auto my-auto">
                                  <i class="fas fa-medal text-primary mt-15" style="font-size:100px;"></i>
                                <h4 class="text-primary mt-15">You have no Certificate yet!</h4>

                            </div>
                        </div>
                        {%endif%}

                    </div>

                        </div>
                        </div>
                        </div>
                    </div>
                    <div class="modal fade " id="onviewmypinmodal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLongTitle" aria-hidden="true">
                        <div class="modal-dialog modal-lg" role="document">
                            <div class="modal-content" style="border-radius: 11px;" >
                                {% partial 'pin/viewmypin' %}
                            </div>
                        </div>
                    </div>
                    <div class="modal fade " id="onbuythispin" tabindex="-1" role="dialog" aria-labelledby="exampleModalLongTitle" aria-hidden="true">
                        <div class="modal-dialog modal-lg" role="document">
                            <div class="modal-content" style="border-radius: 11px;" >
                                {% partial 'pin/buypin' %}
                            </div>
                        </div>
                    </div>
                      <input type="hidden" value="" id="buyingpinid">
                    <div class="header-space"></div>
</section>

<script src="{{'assets/js/sweet-alert.min.js'|theme}}"></script>
<script type="text/javascript">
function onbuythispin(id){
  document.getElementById('buyingpinid').value = id;
}
function onviewmypin(id,title,desc,image,start_date,reg,name,url){
  document.getElementById('viewmyrendertitle').innerHTML = title;
  document.getElementById('viewmyrenderurl').innerHTML = url;
  document.getElementById('viewmyrenderregno').innerHTML = reg;
  document.getElementById('viewmyrenderstartdate').innerHTML = start_date;
  document.getElementById('viewmyrenderholdername').innerHTML = name;
  // document.getElementById('editpinid').value = id;
  // document.getElementById('edittitle').value = title;
  document.getElementById('viewmyrenderimage').src = image;
  // $('#editorglogo').attr("data-default-file", image);
  // document.getElementByClassName('dropify-preview').style.display = 'block';
  // $('.dropify-preview').css('display','block');
  // $('.dropify-render').append('<img src="'+image+'" style="max-height:140px" />');
  // document.getElementByClassName('dropify-render').innerHTML = '<img src="'+image+'" style="max-height:140px" />' ;
  document.getElementById('viewmyrenderdesc').innerHTML = desc;
  // document.getElementById('editdesc').value = desc;

}
    function onedit(id) {
      var AddTrainer = $.request('onEditCertificate',{data:{id:id}}).done(function(data) {
console.log(data)
      });

    }
    function ondelete(id) {

	swal({
		title: "Delete Confirmation?",
		text: "Are you sure you want to delete this certificate?",
		type: "error",
		showCancelButton: true,
		confirmButtonColor: '#DD6B55',
		confirmButtonText: 'Yes, delete it!',
		cancelButtonText: "No, cancel plx!",
		closeOnConfirm: false,
		closeOnCancel: false
	},
	function(isConfirm){
    if (isConfirm){
      var AddTrainer = $.request('onDeleteCertificate',{data:{id:id}}).done(function(data) {
          swal("Deleted!", "Certificate has been deleted!", "success");
          swal({
        		title: "Deleted!",
        		text: "Certificate has been deleted!",
        		type: "success",
        		showCancelButton: false,
        		confirmButtonColor: '#DD6B55',
        		confirmButtonText: 'OK',
        		closeOnConfirm: true,
        		closeOnCancel: false
        	},
        	function(isConfirm){
            var AddTrainer = $.request('onRedirect',{data:{redirect:'/dashboard/organization-certificates/{{this.param.id}}'}}).done(function(data) {
            });

          });
     })

    } else {
      swal("Cancelled", "Your imaginary file is safe :)", "error");
    }
	});

    }
    function sendemail(id) {
        console.log(id)
        var loader = 'spinner' + id;
        var messege = 'successfullysent' + id;
        document.getElementById(loader).style.display = 'block'
        document.getElementById(messege).style.display = 'none'
        $.request('onSendEmail', {
            data: {
                id: id
            }
        }).done(function(data) {
            document.getElementById(loader).style.display = 'none'
            document.getElementById(messege).style.display = 'block'
            return data;
        });

    }

    function sendemailadd(id) {
        console.log(id)
        document.getElementById('spinneradd').style.display = 'block'
        document.getElementById('successfullysentadd').style.display = 'none'
        $.request('onSendEmail', {
            data: {
                id: id
            }
        }).done(function(data) {
            document.getElementById('spinneradd').style.display = 'none'
            document.getElementById('successfullysentadd').style.display = 'block'
            return data;
        });

    }
</script>
